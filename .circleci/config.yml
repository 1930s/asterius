version: 2

jobs:
  asterius-test:
    docker:
      - image: debian:unstable
    environment:
      - ASTERIUS_BUILD_OPTIONS: -j8
      - DEBIAN_FRONTEND: noninteractive
      - GHCRTS: -A512M -I0 -qg -qb -N8
      - LANG: C.UTF-8
      - MAKEFLAGS: -j8
      - PATH: /root/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      - STACK_ROOT: /tmp/.stack
    resource_class: xlarge
    working_directory: /tmp/asterius
    steps:
      - run:
          name: Install dependencies
          command: |
            apt update
            apt full-upgrade -y
            apt install -y \
              automake \
              cmake \
              curl \
              g++ \
              git \
              libffi-dev \
              libgmp-dev \
              libncurses-dev \
              libnuma-dev \
              make \
              openssh-client \
              python-minimal \
              python3-minimal \
              unzip \
              xz-utils \
              zlib1g-dev
            mkdir -p /root/.local/bin
            curl -L https://get.haskellstack.org/stable/linux-x86_64.tar.gz | tar xz --wildcards --strip-components=1 -C /root/.local/bin '*/stack'
      - checkout
      - run:
          name: Test asterius
          command: |
            curl $(python3 utils/v8-node.py) -o /tmp/v8-node.zip
            unzip -q /tmp/v8-node.zip -d /root/.local
            node --version

            git submodule update --init --recursive
            stack --no-terminal -j8 build --test --no-run-tests
            stack --no-terminal exec ahc-boot
            stack --no-terminal test asterius:fib
            stack --no-terminal test asterius:jsffi
            stack --no-terminal test asterius:array
            stack --no-terminal test asterius:stableptr
            stack --no-terminal test asterius:rtsapi
            stack --no-terminal test asterius:teletype
            stack --no-terminal test asterius:bytearray
            stack --no-terminal test asterius:bigint
            stack --no-terminal test asterius:vault
            stack --no-terminal test asterius:todomvc
            stack --no-terminal test asterius:fib --test-arguments="--binaryen"
            stack --no-terminal test asterius:jsffi --test-arguments="--binaryen"
            stack --no-terminal test asterius:array --test-arguments="--binaryen"
            stack --no-terminal test asterius:stableptr --test-arguments="--binaryen"
            stack --no-terminal test asterius:rtsapi --test-arguments="--binaryen"
            stack --no-terminal test asterius:teletype --test-arguments="--binaryen"
            stack --no-terminal test asterius:bytearray --test-arguments="--binaryen"
            stack --no-terminal test asterius:bigint --test-arguments="--binaryen"
            stack --no-terminal test asterius:vault --test-arguments="--binaryen"
            stack --no-terminal test asterius:todomvc --test-arguments="--binaryen"

  asterius-build-docker:
    docker:
      - image: docker:edge-git
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: Make Docker image
          command: |
            git submodule update --init --recursive
            export ASTERIUS_REV=$(git rev-parse --short HEAD)
            docker login -u terrorjack -p $DOCKER_PASS
            docker build -t terrorjack/asterius:$ASTERIUS_REV .
            docker push terrorjack/asterius:$ASTERIUS_REV

  asterius-build-docs:
    docker:
      - image: debian:unstable
    environment:
      DEBIAN_FRONTEND: noninteractive
      LANG: C.UTF-8
    steps:
      - run:
          name: Install dependencies
          command: |
            apt update
            apt full-upgrade -y
            apt install -y \
              git \
              mkdocs \
              openssh-client
      - checkout
      - run:
          name: Build & push docs
          command: |
            if [ -z `ssh-keygen -F github.com` ]; then
              ssh-keyscan -H github.com >> ~/.ssh/known_hosts
            fi
            mkdocs build
            cd site
            touch .nojekyll
            git init
            git config user.email "cheng.shao@tweag.io"
            git config user.name "Shao Cheng"
            git checkout -b gh-pages
            git add --all
            git commit -q --message="Documentation of tweag/asterius@$CIRCLE_SHA1"
            git push git@github.com:tweag/asterius.git gh-pages --force

  asterius-update-docker-tag:
    docker:
      - image: docker:edge-git
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: Update Docker tags
          command: |
            export ASTERIUS_REV=$(git rev-parse --short HEAD)
            docker login -u terrorjack -p $DOCKER_PASS
            docker pull terrorjack/asterius:$ASTERIUS_REV
            docker tag terrorjack/asterius:$ASTERIUS_REV terrorjack/asterius:$CIRCLE_BRANCH
            docker tag terrorjack/asterius:$ASTERIUS_REV terrorjack/asterius:latest
            docker push terrorjack/asterius:$CIRCLE_BRANCH
            if [ $CIRCLE_BRANCH = "master" ]; then
              docker push terrorjack/asterius:latest
            fi

workflows:
  version: 2
  build:
    jobs:
      - asterius-test
      - asterius-build-docker
      - asterius-build-docs:
          requires:
            - asterius-test
          filters:
            branches:
              only: master
      - asterius-update-docker-tag:
          requires:
            - asterius-test
            - asterius-build-docker
